From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: zhang <zhangyuheng@lunadeer.cn>
Date: Sat, 15 Jan 2022 03:27:29 -0600
Subject: [PATCH] unsafe teleportation and sand duplication


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 300b4e97b7ad2408766762940bd7328a8e0649ac..31c741bb6aa70f0456f72710cf277a8ce9ddff3f 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -3942,6 +3942,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {

     protected boolean tryEndPortal() {
         io.papermc.paper.util.TickThread.ensureTickThread(this, "Cannot portal entity async");
+        if (!(this instanceof net.minecraft.world.entity.player.Player)) return false; // Unsafe teleportation
         BlockPos pos = this.portalBlock;
         ServerLevel world = this.portalWorld;
         this.portalBlock = null;
diff --git a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
index 41d7cff39fc37955877668337689b4b26cd8c7cf..fe21ef0a2c451564694de915f6f4e61dbfeed712 100644
--- a/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/EndPortalBlock.java
@@ -53,6 +53,13 @@ public class EndPortalBlock extends BaseEntityBlock {
                 // return; // CraftBukkit - always fire event in case plugins wish to change it
             }

+            // Unsafe teleportation
+            if (!(entity instanceof net.minecraft.world.entity.player.Player)) {
+                entity.endPortalLogicAsync();
+                return;
+            }
+            // end
+
             // Paper start - move all of this logic into portal tick
             entity.portalWorld = ((ServerLevel)world);
             entity.portalBlock = pos.immutable();
diff --git a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
index 18eaccb39a4c81338a8cbebe3de03934913ac2a4..7ad5583f05b608d5a34a33fb77c5bf91f25de9a1 100644
--- a/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/src/main/java/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -133,7 +133,7 @@ public class FallingBlockEntity extends Entity {
     @Override
     public void tick() {
         // Paper start - fix sand duping
-        if (this.isRemoved()) {
+        if (false && this.isRemoved()) { // sand duplication
             return;
         }
         // Paper end - fix sand duping
@@ -150,7 +150,7 @@ public class FallingBlockEntity extends Entity {
             this.move(MoverType.SELF, this.getDeltaMovement());

             // Paper start - fix sand duping
-            if (this.isRemoved()) {
+            if (false && this.isRemoved()) { // sand duplication
                 return;
             }
             // Paper end - fix sand duping
diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 31c741bb6aa70f0456f72710cf277a8ce9ddff3f..114ab0bf54538e39050a1da7cb7703d16033d24d 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -4028,12 +4028,17 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
                      targetPos, 16, // load 16 blocks to be safe from block physics
                      ca.spottedleaf.concurrentutil.executor.standard.PrioritisedExecutor.Priority.HIGH,
                      (chunks) -> {
-                            ServerLevel.makeObsidianPlatform(destination, null, targetPos);
+                            //ServerLevel.makeObsidianPlatform(destination, null, targetPos); // Vanilla end teleportation - moved down

+                            // start - Vanilla end teleportation
+                            Vec3 finalPos;
+                            if (this instanceof Player) finalPos = Vec3.atBottomCenterOf(targetPos.below());
+                            else finalPos = Vec3.atBottomCenterOf(targetPos);
+                            // end
                          // the portal obsidian is placed at targetPos.y - 2, so if we want to place the entity
                          // on the obsidian, we need to spawn at targetPos.y - 1
                          portalInfoCompletable.complete(
-                                new PortalInfo(Vec3.atBottomCenterOf(targetPos.below()), Vec3.ZERO, 90.0f, 0.0f, destination, null)
+                                new PortalInfo(finalPos, this.getDeltaMovement(), 90.0f, 0.0f, destination, null) // Vanilla end teleportation
                          );
                      }
                  );
@@ -4220,6 +4225,10 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
      if (!this.canPortalAsync(takePassengers)) {
          return false;
      }
+        // start - sync end platform spawning & entity teleportation
+        final java.util.function.Consumer<Entity> tpComplete = type == PortalType.END && destination.getTypeKey() == LevelStem.END ?
+              e -> ServerLevel.makeObsidianPlatform(destination, null, ServerLevel.END_SPAWN_POINT) : teleportComplete;
+        // end

      Vec3 initialPosition = this.position();
      ChunkPos initialPositionChunk = new ChunkPos(
@@ -4278,7 +4287,7 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
          // place
          passengerTree.root.placeInAsync(
              originWorld, destination, Entity.TELEPORT_FLAG_LOAD_CHUNK | (takePassengers ? Entity.TELEPORT_FLAG_TELEPORT_PASSENGERS : 0L),
-                passengerTree, teleportComplete
+                passengerTree, tpComplete // vanilla end teleportation
          );
      });

